---
- hosts: localhost
  collections:
    - netapp.storagegrid
  vars_files:
    /root/git/storagegrid-workshop/Module-0/01-sg_vars.yml
  gather_facts: no
  tasks:
  - name: Get grid authorization token
    uri:
      url: "{{ grid_admin_base_url }}/api/v3/authorize"
      method: POST
      body: {
        "username": "{{ grid_username }}",
        "password": "{{ grid_password }}",
        "cookie": false,
        "csrfToken": false
      }
      body_format: json
      validate_certs: false
    register: auth
  
  - name: Obtain StorageGRID Account Token
    na_sg_grid_account:
      api_url: "{{ grid_admin_base_url }}"
      auth_token: "{{ auth.json.data }}"
      validate_certs: false
      state: present
      name: "{{ tenant_name }}"
      protocol: s3
      management: true
      use_own_identity_source: "{{ tenant_use_own_identity_source }}"
      allow_platform_services: "{{ tenant_platform_services }}"
      password: "{{ tenant_password }}"
      quota_size: 100
    register: account
 
  - name: Get user authorization token
    uri:
      url: "{{ grid_admin_base_url }}/api/v3/authorize"
      method: POST
      body: {
        "accountId": "{{ account.resp.id }}",
        "username": "{{ tenant_username }}",
        "password": "{{ tenant_password }}",
        "cookie": false,
        "csrfToken": false
      }
      body_format: json
      validate_certs: false
    register: auth
 
  - name: Create users
    na_sg_org_user:
      api_url: "{{ grid_admin_base_url }}"
      auth_token: "{{ auth.json.data }}"
      validate_certs: false
      state: present
      full_name: "{{ item }}"
      unique_name: "user/{{ item }}"
      member_of: "group/{{ tenant_group }}"
    with_items: "{{ tenant_users }}"
 

 
